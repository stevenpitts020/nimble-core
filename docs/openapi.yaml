openapi: 3.0.3
info:
  description: This REST API supplies all operations required to interact with the
    resources of our service.
  version: v1
  title: Nimble Core REST API
  contact:
    name: Singular
    email: founders@wearesingular.com

servers:
  - url: http://localhost/v1

tags:
  - name: Health
    description: Everything about service status
  - name: Auth
    description: Everything related to authentication
    security: []
  - name: User
    description: Everything related to users
  - name: Prospect
    description: Everything related to prospects
  - name: Institution
    description: Everything related to institution
  - name: Signer
    description: Everything related to signers
  - name: Account Request
    description: Everything related to account requests
  - name: Document
    description: Everything related to documents
  - name: Webhooks
    description: Everything related to webhooks

paths: {}

components:
  parameters:
    date:
      since:
        in: query
        name: since
        required: false
        type: string
        format: RFC2822 date time format
        default: null
        description: filter records since this date.
      until:
        in: query
        name: until
        required: false
        type: string
        format: RFC2822 date time format
        default: null
        description: filter records until this date.
    pagination:
      offset:
        in: query
        name: offset
        required: false
        description: The number of items to skip before starting to collect the result set.
        schema:
          type: string
          minimum: 0
          default: 0
      limit:
        in: query
        name: limit
        required: false
        description: The numbers of items to return in the result set.
        schema:
          type: string
          minimum: 1
          maximum: 50
          default: 30
  securitySchemes:
    bearer:
      description: >
        For accessing the API a valid JWT token must be passed in all the
        queries in

        the 'Authorization' header.


        A valid JWT token is generated by the API and retourned as answer of a call

        to the route /login giving a valid user & password.


        The following syntax must be used in the 'Authorization' header:

            Bearer xxxxxx.yyyyyyy.zzzzzz
      type: apiKey
      name: Authorization
      in: header
    token:
      description: >
        For accessing the API a valid JWT token must be passed.
      type: apiKey
      name: token
      in: query
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  schemas:
    Image:
      type: object
      properties:
        default:
          type: string
          format: uri
          description: the default image size
          example: https://wearesingular.com/img/intro-bg.jpg
    Error:
      type: object
      required:
        - statusCode
        - message
      properties:
        statusCode:
          type: string
          title: Error Code
          description: the HTTP error code
        message:
          type: string
          title: Developer message
          description: A message that have more detailed information than the previous one
            and it's usefull for debugging proposes, it is always expressed in
            english.
    Health:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          title: API current status
          description: >
            A human readable string that represents a the API status. The
            application have the following status:  * `ok`  - The API is running
            without any known problems.
          enum:
            - ok
          example: ok
        message:
          type: string
          title: API current status message
          description: A undestandble message of the current API status.
          example: The API is running without any known problems
  responses:
    Count:
      description: OK
      type: object
      required:
        - count
      properties:
        count:
          type: integer
          title: Resource count
          description: The number of resource available in the collection
          example: 2
    BadRequest:
      description: Bad request
    PreCondition:
      description: One or more conditions given in the request header fields evaluated to false when tested on the server.
    NotFound:
      description: Resource Not Found
    TokenExpired:
      description: Token expired
    InternalError:
      description: Internal server error
    Unauthorized:
      description: Authentication information is missing or invalid
    Forbidden:
      description: The server understood the request but refuses to authorize it
    Conflict:
      description: Duplicated keys
    NoContent:
      description: The request was successfully fulfilled
